name: Test libmpdata++

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: ["Debug", "Release"]
        mpi: ["none", "mvapich2"]
        include:
        - mpi: "none"
          tag: "ubuntu_20_04_cuda_11_4"
          cxx: "g++"
        - mpi: "mvapich2"
          tag: "ubuntu_20_04_cuda_11_4_mvapich2"
          cxx: "mpic++"

    steps:
    - uses: actions/checkout@v2

    # Debugging with a ssh session
#    - name: Setup tmate session
#      uses: mxschmitt/action-tmate@v3

    - name: Install libmpdata++
      uses: ./.github/actions/libmpdataxx_install
      with:
        build_type: ${{matrix.build_type}}
        threads: ${{matrix.threads}}
        path: ${{ github.workspace }}/libmpdata++
        install_prefix: ${{ github.workspace }}/installed 
        tag: ${{ matrix.tag }}
        cxx: ${{ matrix.cxx }}

    - run: mkdir ${{ github.workspace }}/tests/unit/build

    # Debugging with a ssh session
#    - name: Setup tmate session
#      uses: mxschmitt/action-tmate@v3

    - name: configure,make and run unit tests
      working-directory: ${{ github.workspace }}/tests/unit
#      run: VERBOSE=1 singularity exec $SI bash -c "cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}; cmake --build build --config ${{matrix.build_type}} -j4; ctest --test-dir build -C ${{matrix.build_type}}"
      run: VERBOSE=1 singularity exec $SI bash -c "cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}; cmake --build build --config ${{matrix.build_type}} -j4; ctest --test-dir build -C ${{matrix.build_type}} || cat build/Testing/Temporary/LastTest.log /"

#    - name: run unit tests
#      working-directory: ${{ github.workspace }}/tests/unit/build
#      run: OMP_NUM_THREADS=4 singularity exec $SI ctest -C ${{matrix.build_type}} || cat Testing/Temporary/LastTest.log / # "/" intentional! (just to make cat exit with an error code)
